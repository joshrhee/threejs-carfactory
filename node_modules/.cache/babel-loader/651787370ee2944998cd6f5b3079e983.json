{"ast":null,"code":"import * as THREE from 'three'; // Hierarchy:\n//                                                  Scene(root)\n//                                                       |                        \n//                                                  mainBox(mesh)\n//                 /                                     |                                             \\                    .... nose, back exhaust\n//          cabin(mesh)                            wheelAttachers(Object3D)                            eyes(Object3D)\n//             |                                    /                \\                                    /       \\\n//   4 textures(canvas Texture)      frontAttacher(mesh)           backAttacher(mesh)              leftEeye(mesh)    rightEye(mesh)\n//                                   /           \\                   /          \\\n//                        leftWheel(mesh)    rightWheel(mesh)  leftWheel(mesh)   rightWheel(mesh)\n// left is + right is -\n// above is + down is -\n// far is + near is -\n\nconst SantaCar = () => {\n  // mainBox\n  // part 1\n  const mainBox = createMainBox(0xf3f709); //60 15 30\n  // Front wheel part\n  // part 2\n\n  const frontWheelAttacher = createWheelAttacher(0x333333); // 12 12 33\n\n  frontWheelAttacher.translateX(18);\n  frontWheelAttacher.translateY(-3); // part 3\n\n  const frontLeftwheel = createWheel(0xFFC0CB);\n  frontWheelAttacher.add(frontLeftwheel);\n  frontLeftwheel.translateY(-3);\n  frontLeftwheel.translateZ(-17.5); // part 4\n\n  const frontRightwheel = createWheel(0xFFC0CB);\n  frontWheelAttacher.add(frontRightwheel);\n  frontRightwheel.translateY(-3);\n  frontRightwheel.translateZ(17.5); // Back wheel part\n  // part 5\n\n  const backWheelAttacher = createWheelAttacher(0x333333);\n  backWheelAttacher.translateX(-18);\n  backWheelAttacher.translateY(-3); // part 6\n\n  const backLeftwheel = createWheel(0xFFC0CB);\n  backWheelAttacher.add(backLeftwheel);\n  backLeftwheel.translateY(-3);\n  backLeftwheel.translateZ(-17.5); // part 7\n\n  const backRightwheel = createWheel(0xFFC0CB);\n  backWheelAttacher.add(backRightwheel);\n  backRightwheel.translateY(-3);\n  backRightwheel.translateZ(17.5);\n  const allWheelAttachers = new THREE.Object3D();\n  allWheelAttachers.add(frontWheelAttacher, backWheelAttacher);\n  mainBox.add(allWheelAttachers); // part 8\n\n  const carFrontTexture = getCarFrontBackTexture(mainBox); // part 9\n\n  const carBackTexture = getCarFrontBackTexture(mainBox); // part 10\n\n  const carLeftSideTexture = getCarSideTexture(mainBox); // part 11\n\n  const carRightSideTexture = getCarSideTexture(mainBox); // Putting all textures into cabin\n\n  const cabin = createCabin(carFrontTexture, carBackTexture, carLeftSideTexture, carRightSideTexture);\n  mainBox.add(cabin);\n  cabin.translateX(-6);\n  cabin.translateY(13.5); // Eye part\n  // part 12\n\n  const leftHeadEye = headEye(0x000000);\n  leftHeadEye.translateX(30);\n  leftHeadEye.translateY(3);\n  leftHeadEye.translateZ(-10);\n  leftHeadEye.rotateY(degreeToRadian(90)); // part 13\n\n  const rightHeadEye = headEye(0x000000);\n  rightHeadEye.translateX(30);\n  rightHeadEye.translateY(3);\n  rightHeadEye.translateZ(10);\n  rightHeadEye.rotateY(degreeToRadian(90));\n  const eyes = new THREE.Object3D();\n  eyes.add(leftHeadEye, rightHeadEye);\n  mainBox.add(eyes); // Nose\n  // part 14\n\n  const nose = createNose(0xf70707);\n  nose.translateX(30);\n  nose.rotateZ(degreeToRadian(-90));\n  mainBox.add(nose); // Back exhaust part\n  // part 15\n\n  const leftExhaust = createExhaust(0x968b8b);\n  leftExhaust.translateX(-32);\n  leftExhaust.translateY(-5);\n  leftExhaust.translateZ(-3);\n  leftExhaust.rotateZ(degreeToRadian(90)); // part 16\n\n  const rightExhaust = createExhaust(0x968b8b);\n  rightExhaust.translateX(-32);\n  rightExhaust.translateY(-5);\n  rightExhaust.translateZ(3);\n  rightExhaust.rotateZ(degreeToRadian(90)); // Putting all exhaust into exhaust group\n\n  const exhausts = new THREE.Object3D();\n  exhausts.add(leftExhaust, rightExhaust);\n  mainBox.add(exhausts);\n  return mainBox;\n};\n\n_c = SantaCar;\n\nfunction createExhaust(color) {\n  const geometry = new THREE.CylinderGeometry(1.3, 1.3, 4, 32);\n  const material = new THREE.MeshBasicMaterial({\n    color: color\n  });\n  const cylinder = new THREE.Mesh(geometry, material);\n  return cylinder;\n}\n\nfunction createNose(color) {\n  const geometry = new THREE.ConeGeometry(5, 10, 32);\n  const material = new THREE.MeshBasicMaterial({\n    color: color\n  });\n  const cone = new THREE.Mesh(geometry, material);\n  return cone;\n}\n\nfunction headEye(color) {\n  var geometry = new THREE.RingGeometry(1, 3.5, 32);\n  var material = new THREE.MeshPhongMaterial({\n    color: 0x000000\n  });\n  const blackEye = new THREE.Mesh(geometry, material);\n  geometry = new THREE.RingGeometry(0, 1, 32);\n  material = new THREE.MeshPhongMaterial({\n    color: 0xffffff\n  });\n  const whiteEye = new THREE.Mesh(geometry, material);\n  blackEye.add(whiteEye);\n  return blackEye;\n}\n\nfunction getCarSideTexture(mainBox) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = 128;\n  canvas.height = 32;\n  const context = canvas.getContext(\"2d\");\n\n  if (context != null) {\n    context.fillStyle = \"#ffffff\";\n    context.fillRect(mainBox.position.x, mainBox.position.y, 128, 32);\n    context.fillStyle = \"#666666\";\n    context.fillRect(mainBox.position.x + 10, mainBox.position.y + 5, 38, 24);\n    context.fillRect(mainBox.position.x + 58, mainBox.position.y + 5, 60, 24);\n  }\n\n  return new THREE.CanvasTexture(canvas);\n}\n\nfunction getCarFrontBackTexture(mainBox) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = 64;\n  canvas.height = 32;\n  const context = canvas.getContext(\"2d\");\n\n  if (context != null) {\n    context.fillStyle = \"#ffffff\";\n    context.fillRect(mainBox.position.x, mainBox.position.y, 64, 32);\n    context.fillStyle = \"#666666\";\n    context.fillRect(mainBox.position.x + 8, mainBox.position.y + 5, 48, 24);\n  }\n\n  return new THREE.CanvasTexture(canvas);\n}\n\nfunction createCabin(carFrontTexture, carBackTexture, carRightSideTexture, carLeftSideTexture) {\n  const cabin = new THREE.Mesh(new THREE.BoxBufferGeometry(33, 12, 24), [new THREE.MeshLambertMaterial({\n    map: carFrontTexture\n  }), new THREE.MeshLambertMaterial({\n    map: carBackTexture\n  }), new THREE.MeshLambertMaterial({\n    color: 0xffffff\n  }), // top\n  new THREE.MeshLambertMaterial({\n    color: 0xffffff\n  }), // bottom\n  new THREE.MeshLambertMaterial({\n    map: carRightSideTexture\n  }), new THREE.MeshLambertMaterial({\n    map: carLeftSideTexture\n  })]);\n  return cabin;\n}\n\nfunction createMainBox(color) {\n  const main = new THREE.Mesh(new THREE.BoxBufferGeometry(60, 15, 30), new THREE.MeshPhongMaterial({\n    color: color,\n    flatShading: true\n  }));\n  return main;\n}\n\nfunction createWheel(color) {\n  // const geometry: THREE.CircleGeometry = new THREE.CircleGeometry(2, 32);\n  const geometry = new THREE.TorusGeometry(5, 3, 20, 50);\n  const material = new THREE.MeshPhongMaterial({\n    color: 0xFFC0CB\n  });\n  const wheel = new THREE.Mesh(geometry, material);\n  return wheel;\n}\n\nfunction createWheelAttacher(color) {\n  const geometry = new THREE.BoxBufferGeometry(12, 12, 33);\n  const material = new THREE.MeshPhongMaterial({\n    color: color\n  });\n  const wheelAttacher = new THREE.Mesh(geometry, material);\n  return wheelAttacher;\n}\n\nfunction degreeToRadian(degree) {\n  return degree * Math.PI / 180;\n}\n\nexport default SantaCar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SantaCar\");","map":{"version":3,"sources":["/Users/sangjunerhee/Desktop/Git/Threejs-CarFactory/src/components/SantaCar.jsx"],"names":["THREE","SantaCar","mainBox","createMainBox","frontWheelAttacher","createWheelAttacher","translateX","translateY","frontLeftwheel","createWheel","add","translateZ","frontRightwheel","backWheelAttacher","backLeftwheel","backRightwheel","allWheelAttachers","Object3D","carFrontTexture","getCarFrontBackTexture","carBackTexture","carLeftSideTexture","getCarSideTexture","carRightSideTexture","cabin","createCabin","leftHeadEye","headEye","rotateY","degreeToRadian","rightHeadEye","eyes","nose","createNose","rotateZ","leftExhaust","createExhaust","rightExhaust","exhausts","color","geometry","CylinderGeometry","material","MeshBasicMaterial","cylinder","Mesh","ConeGeometry","cone","RingGeometry","MeshPhongMaterial","blackEye","whiteEye","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","position","x","y","CanvasTexture","BoxBufferGeometry","MeshLambertMaterial","map","main","flatShading","TorusGeometry","wheel","wheelAttacher","degree","Math","PI"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAEnB;AACA;AACA,QAAMC,OAAO,GAAGC,aAAa,CAAC,QAAD,CAA7B,CAJmB,CAIqB;AAGxC;AACA;;AACA,QAAMC,kBAAkB,GAAGC,mBAAmB,CAAC,QAAD,CAA9C,CATmB,CASuC;;AAC1DD,EAAAA,kBAAkB,CAACE,UAAnB,CAA8B,EAA9B;AACAF,EAAAA,kBAAkB,CAACG,UAAnB,CAA8B,CAAC,CAA/B,EAXmB,CAanB;;AACA,QAAMC,cAAc,GAAGC,WAAW,CAAC,QAAD,CAAlC;AACAL,EAAAA,kBAAkB,CAACM,GAAnB,CAAuBF,cAAvB;AACAA,EAAAA,cAAc,CAACD,UAAf,CAA0B,CAAC,CAA3B;AACAC,EAAAA,cAAc,CAACG,UAAf,CAA0B,CAAC,IAA3B,EAjBmB,CAmBnB;;AACA,QAAMC,eAAe,GAAGH,WAAW,CAAC,QAAD,CAAnC;AACAL,EAAAA,kBAAkB,CAACM,GAAnB,CAAuBE,eAAvB;AACAA,EAAAA,eAAe,CAACL,UAAhB,CAA2B,CAAC,CAA5B;AACAK,EAAAA,eAAe,CAACD,UAAhB,CAA2B,IAA3B,EAvBmB,CA0BnB;AACA;;AACA,QAAME,iBAAiB,GAAGR,mBAAmB,CAAC,QAAD,CAA7C;AACAQ,EAAAA,iBAAiB,CAACP,UAAlB,CAA6B,CAAC,EAA9B;AACAO,EAAAA,iBAAiB,CAACN,UAAlB,CAA6B,CAAC,CAA9B,EA9BmB,CAgCnB;;AACA,QAAMO,aAAa,GAAGL,WAAW,CAAC,QAAD,CAAjC;AACAI,EAAAA,iBAAiB,CAACH,GAAlB,CAAsBI,aAAtB;AACAA,EAAAA,aAAa,CAACP,UAAd,CAAyB,CAAC,CAA1B;AACAO,EAAAA,aAAa,CAACH,UAAd,CAAyB,CAAC,IAA1B,EApCmB,CAsCnB;;AACA,QAAMI,cAAc,GAAGN,WAAW,CAAC,QAAD,CAAlC;AACAI,EAAAA,iBAAiB,CAACH,GAAlB,CAAsBK,cAAtB;AACAA,EAAAA,cAAc,CAACR,UAAf,CAA0B,CAAC,CAA3B;AACAQ,EAAAA,cAAc,CAACJ,UAAf,CAA0B,IAA1B;AAGA,QAAMK,iBAAiB,GAAG,IAAIhB,KAAK,CAACiB,QAAV,EAA1B;AACAD,EAAAA,iBAAiB,CAACN,GAAlB,CAAsBN,kBAAtB,EAA0CS,iBAA1C;AACAX,EAAAA,OAAO,CAACQ,GAAR,CAAYM,iBAAZ,EA/CmB,CAkDnB;;AACA,QAAME,eAAe,GAAGC,sBAAsB,CAACjB,OAAD,CAA9C,CAnDmB,CAqDnB;;AACA,QAAMkB,cAAc,GAAGD,sBAAsB,CAACjB,OAAD,CAA7C,CAtDmB,CAwDnB;;AACA,QAAMmB,kBAAkB,GAAGC,iBAAiB,CAACpB,OAAD,CAA5C,CAzDmB,CA2DnB;;AACA,QAAMqB,mBAAmB,GAAGD,iBAAiB,CAACpB,OAAD,CAA7C,CA5DmB,CA8DnB;;AACA,QAAMsB,KAAK,GAAGC,WAAW,CAACP,eAAD,EAAkBE,cAAlB,EAAkCC,kBAAlC,EAAsDE,mBAAtD,CAAzB;AACArB,EAAAA,OAAO,CAACQ,GAAR,CAAYc,KAAZ;AACAA,EAAAA,KAAK,CAAClB,UAAN,CAAiB,CAAC,CAAlB;AACAkB,EAAAA,KAAK,CAACjB,UAAN,CAAiB,IAAjB,EAlEmB,CAqEnB;AACA;;AACA,QAAMmB,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;AACAD,EAAAA,WAAW,CAACpB,UAAZ,CAAuB,EAAvB;AACAoB,EAAAA,WAAW,CAACnB,UAAZ,CAAuB,CAAvB;AACAmB,EAAAA,WAAW,CAACf,UAAZ,CAAuB,CAAC,EAAxB;AACAe,EAAAA,WAAW,CAACE,OAAZ,CAAoBC,cAAc,CAAC,EAAD,CAAlC,EA3EmB,CA6EnB;;AACA,QAAMC,YAAY,GAAGH,OAAO,CAAC,QAAD,CAA5B;AACAG,EAAAA,YAAY,CAACxB,UAAb,CAAwB,EAAxB;AACAwB,EAAAA,YAAY,CAACvB,UAAb,CAAwB,CAAxB;AACAuB,EAAAA,YAAY,CAACnB,UAAb,CAAwB,EAAxB;AACAmB,EAAAA,YAAY,CAACF,OAAb,CAAqBC,cAAc,CAAC,EAAD,CAAnC;AAEA,QAAME,IAAI,GAAG,IAAI/B,KAAK,CAACiB,QAAV,EAAb;AACAc,EAAAA,IAAI,CAACrB,GAAL,CAASgB,WAAT,EAAsBI,YAAtB;AACA5B,EAAAA,OAAO,CAACQ,GAAR,CAAYqB,IAAZ,EAtFmB,CAyFnB;AACA;;AACA,QAAMC,IAAI,GAAGC,UAAU,CAAC,QAAD,CAAvB;AACAD,EAAAA,IAAI,CAAC1B,UAAL,CAAgB,EAAhB;AACA0B,EAAAA,IAAI,CAACE,OAAL,CAAaL,cAAc,CAAC,CAAC,EAAF,CAA3B;AACA3B,EAAAA,OAAO,CAACQ,GAAR,CAAYsB,IAAZ,EA9FmB,CAiGnB;AACA;;AACA,QAAMG,WAAW,GAAGC,aAAa,CAAC,QAAD,CAAjC;AACAD,EAAAA,WAAW,CAAC7B,UAAZ,CAAuB,CAAC,EAAxB;AACA6B,EAAAA,WAAW,CAAC5B,UAAZ,CAAuB,CAAC,CAAxB;AACA4B,EAAAA,WAAW,CAACxB,UAAZ,CAAuB,CAAC,CAAxB;AACAwB,EAAAA,WAAW,CAACD,OAAZ,CAAoBL,cAAc,CAAC,EAAD,CAAlC,EAvGmB,CAyGnB;;AACA,QAAMQ,YAAY,GAAGD,aAAa,CAAC,QAAD,CAAlC;AACAC,EAAAA,YAAY,CAAC/B,UAAb,CAAwB,CAAC,EAAzB;AACA+B,EAAAA,YAAY,CAAC9B,UAAb,CAAwB,CAAC,CAAzB;AACA8B,EAAAA,YAAY,CAAC1B,UAAb,CAAwB,CAAxB;AACA0B,EAAAA,YAAY,CAACH,OAAb,CAAqBL,cAAc,CAAC,EAAD,CAAnC,EA9GmB,CAgHnB;;AACA,QAAMS,QAAQ,GAAG,IAAItC,KAAK,CAACiB,QAAV,EAAjB;AACAqB,EAAAA,QAAQ,CAAC5B,GAAT,CAAayB,WAAb,EAA0BE,YAA1B;AACAnC,EAAAA,OAAO,CAACQ,GAAR,CAAY4B,QAAZ;AAEA,SAAOpC,OAAP;AACH,CAtHD;;KAAMD,Q;;AAwHN,SAASmC,aAAT,CAAuBG,KAAvB,EAA8B;AAC1B,QAAMC,QAAQ,GAAG,IAAIxC,KAAK,CAACyC,gBAAV,CAA4B,GAA5B,EAAiC,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAAjB;AACA,QAAMC,QAAQ,GAAG,IAAI1C,KAAK,CAAC2C,iBAAV,CAA6B;AAACJ,IAAAA,KAAK,EAAEA;AAAR,GAA7B,CAAjB;AACA,QAAMK,QAAQ,GAAG,IAAI5C,KAAK,CAAC6C,IAAV,CAAgBL,QAAhB,EAA0BE,QAA1B,CAAjB;AACA,SAAOE,QAAP;AACH;;AAED,SAASX,UAAT,CAAoBM,KAApB,EAA2B;AACvB,QAAMC,QAAQ,GAAG,IAAIxC,KAAK,CAAC8C,YAAV,CAAwB,CAAxB,EAA2B,EAA3B,EAA+B,EAA/B,CAAjB;AACA,QAAMJ,QAAQ,GAAG,IAAI1C,KAAK,CAAC2C,iBAAV,CAA6B;AAACJ,IAAAA,KAAK,EAAEA;AAAR,GAA7B,CAAjB;AACA,QAAMQ,IAAI,GAAG,IAAI/C,KAAK,CAAC6C,IAAV,CAAgBL,QAAhB,EAA0BE,QAA1B,CAAb;AACA,SAAOK,IAAP;AACH;;AAED,SAASpB,OAAT,CAAiBY,KAAjB,EAAwB;AACpB,MAAIC,QAAQ,GAAG,IAAIxC,KAAK,CAACgD,YAAV,CAAuB,CAAvB,EAA0B,GAA1B,EAA+B,EAA/B,CAAf;AACA,MAAIN,QAAQ,GAAG,IAAI1C,KAAK,CAACiD,iBAAV,CAA4B;AAACV,IAAAA,KAAK,EAAE;AAAR,GAA5B,CAAf;AACA,QAAMW,QAAQ,GAAG,IAAIlD,KAAK,CAAC6C,IAAV,CAAeL,QAAf,EAAyBE,QAAzB,CAAjB;AAEAF,EAAAA,QAAQ,GAAG,IAAIxC,KAAK,CAACgD,YAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,CAAX;AACAN,EAAAA,QAAQ,GAAG,IAAI1C,KAAK,CAACiD,iBAAV,CAA4B;AAACV,IAAAA,KAAK,EAAE;AAAR,GAA5B,CAAX;AACA,QAAMY,QAAQ,GAAG,IAAInD,KAAK,CAAC6C,IAAV,CAAeL,QAAf,EAAyBE,QAAzB,CAAjB;AAEAQ,EAAAA,QAAQ,CAACxC,GAAT,CAAayC,QAAb;AAEA,SAAOD,QAAP;AACH;;AAED,SAAS5B,iBAAT,CAA2BpB,OAA3B,EAAoC;AAChC,QAAMkD,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,KAAP,GAAe,GAAf;AACAH,EAAAA,MAAM,CAACI,MAAP,GAAgB,EAAhB;AACA,QAAMC,OAAO,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAhB;;AAEA,MAAID,OAAO,IAAI,IAAf,EAAqB;AACjBA,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB1D,OAAO,CAAC2D,QAAR,CAAiBC,CAAlC,EAAqC5D,OAAO,CAAC2D,QAAR,CAAiBE,CAAtD,EAAyD,GAAzD,EAA8D,EAA9D;AAEAN,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB1D,OAAO,CAAC2D,QAAR,CAAiBC,CAAjB,GAAqB,EAAtC,EAA0C5D,OAAO,CAAC2D,QAAR,CAAiBE,CAAjB,GAAqB,CAA/D,EAAkE,EAAlE,EAAsE,EAAtE;AACAN,IAAAA,OAAO,CAACG,QAAR,CAAiB1D,OAAO,CAAC2D,QAAR,CAAiBC,CAAjB,GAAqB,EAAtC,EAA0C5D,OAAO,CAAC2D,QAAR,CAAiBE,CAAjB,GAAqB,CAA/D,EAAkE,EAAlE,EAAsE,EAAtE;AACH;;AACD,SAAO,IAAI/D,KAAK,CAACgE,aAAV,CAAwBZ,MAAxB,CAAP;AACH;;AAED,SAASjC,sBAAT,CAAgCjB,OAAhC,EAAyC;AACrC,QAAMkD,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,KAAP,GAAe,EAAf;AACAH,EAAAA,MAAM,CAACI,MAAP,GAAgB,EAAhB;AACA,QAAMC,OAAO,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAhB;;AAEA,MAAID,OAAO,IAAI,IAAf,EAAqB;AACjBA,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB1D,OAAO,CAAC2D,QAAR,CAAiBC,CAAlC,EAAqC5D,OAAO,CAAC2D,QAAR,CAAiBE,CAAtD,EAAyD,EAAzD,EAA6D,EAA7D;AAEAN,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB1D,OAAO,CAAC2D,QAAR,CAAiBC,CAAjB,GAAqB,CAAtC,EAAyC5D,OAAO,CAAC2D,QAAR,CAAiBE,CAAjB,GAAqB,CAA9D,EAAiE,EAAjE,EAAqE,EAArE;AACH;;AACD,SAAO,IAAI/D,KAAK,CAACgE,aAAV,CAAwBZ,MAAxB,CAAP;AACH;;AAED,SAAS3B,WAAT,CAAqBP,eAArB,EACIE,cADJ,EAEIG,mBAFJ,EAGIF,kBAHJ,EAGwB;AACpB,QAAMG,KAAK,GAAG,IAAIxB,KAAK,CAAC6C,IAAV,CAAe,IAAI7C,KAAK,CAACiE,iBAAV,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAAf,EAAwD,CAClE,IAAIjE,KAAK,CAACkE,mBAAV,CAA8B;AAACC,IAAAA,GAAG,EAAEjD;AAAN,GAA9B,CADkE,EAElE,IAAIlB,KAAK,CAACkE,mBAAV,CAA8B;AAACC,IAAAA,GAAG,EAAE/C;AAAN,GAA9B,CAFkE,EAGlE,IAAIpB,KAAK,CAACkE,mBAAV,CAA8B;AAAE3B,IAAAA,KAAK,EAAE;AAAT,GAA9B,CAHkE,EAGd;AACpD,MAAIvC,KAAK,CAACkE,mBAAV,CAA8B;AAAE3B,IAAAA,KAAK,EAAE;AAAT,GAA9B,CAJkE,EAId;AACpD,MAAIvC,KAAK,CAACkE,mBAAV,CAA8B;AAAEC,IAAAA,GAAG,EAAE5C;AAAP,GAA9B,CALkE,EAMlE,IAAIvB,KAAK,CAACkE,mBAAV,CAA8B;AAAEC,IAAAA,GAAG,EAAE9C;AAAP,GAA9B,CANkE,CAAxD,CAAd;AAQA,SAAOG,KAAP;AACH;;AAED,SAASrB,aAAT,CAAuBoC,KAAvB,EAA8B;AAC1B,QAAM6B,IAAI,GAAG,IAAIpE,KAAK,CAAC6C,IAAV,CACT,IAAI7C,KAAK,CAACiE,iBAAV,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CADS,EAET,IAAIjE,KAAK,CAACiD,iBAAV,CAA4B;AAAEV,IAAAA,KAAK,EAAEA,KAAT;AAAgB8B,IAAAA,WAAW,EAAE;AAA7B,GAA5B,CAFS,CAAb;AAIA,SAAOD,IAAP;AACH;;AAED,SAAS3D,WAAT,CAAqB8B,KAArB,EAA4B;AACxB;AACA,QAAMC,QAAQ,GAAG,IAAIxC,KAAK,CAACsE,aAAV,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,CAAjB;AACA,QAAM5B,QAAQ,GAAG,IAAI1C,KAAK,CAACiD,iBAAV,CAA4B;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAA5B,CAAjB;AACA,QAAMgC,KAAK,GAAG,IAAIvE,KAAK,CAAC6C,IAAV,CAAeL,QAAf,EAAyBE,QAAzB,CAAd;AACA,SAAO6B,KAAP;AACH;;AAED,SAASlE,mBAAT,CAA6BkC,KAA7B,EAAoC;AAChC,QAAMC,QAAQ,GAAG,IAAIxC,KAAK,CAACiE,iBAAV,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAAjB;AACA,QAAMvB,QAAQ,GAAG,IAAI1C,KAAK,CAACiD,iBAAV,CAA4B;AAAEV,IAAAA,KAAK,EAAEA;AAAT,GAA5B,CAAjB;AACA,QAAMiC,aAAa,GAAG,IAAIxE,KAAK,CAAC6C,IAAV,CAAeL,QAAf,EAAyBE,QAAzB,CAAtB;AACA,SAAO8B,aAAP;AACH;;AAED,SAAS3C,cAAT,CAAwB4C,MAAxB,EAAgC;AAC5B,SAAOA,MAAM,GAAGC,IAAI,CAACC,EAAd,GAAmB,GAA1B;AACH;;AAED,eAAe1E,QAAf","sourcesContent":["import * as THREE from 'three';\n\n// Hierarchy:\n//                                                  Scene(root)\n//                                                       |                        \n//                                                  mainBox(mesh)\n//                 /                                     |                                             \\                    .... nose, back exhaust\n//          cabin(mesh)                            wheelAttachers(Object3D)                            eyes(Object3D)\n//             |                                    /                \\                                    /       \\\n//   4 textures(canvas Texture)      frontAttacher(mesh)           backAttacher(mesh)              leftEeye(mesh)    rightEye(mesh)\n//                                   /           \\                   /          \\\n//                        leftWheel(mesh)    rightWheel(mesh)  leftWheel(mesh)   rightWheel(mesh)\n\n\n\n// left is + right is -\n// above is + down is -\n// far is + near is -\nconst SantaCar = () => {\n\n    // mainBox\n    // part 1\n    const mainBox = createMainBox(0xf3f709) //60 15 30\n\n\n    // Front wheel part\n    // part 2\n    const frontWheelAttacher = createWheelAttacher(0x333333); // 12 12 33\n    frontWheelAttacher.translateX(18);\n    frontWheelAttacher.translateY(-3)\n    \n    // part 3\n    const frontLeftwheel = createWheel(0xFFC0CB);\n    frontWheelAttacher.add(frontLeftwheel)\n    frontLeftwheel.translateY(-3);\n    frontLeftwheel.translateZ(-17.5);\n    \n    // part 4\n    const frontRightwheel = createWheel(0xFFC0CB);\n    frontWheelAttacher.add(frontRightwheel)\n    frontRightwheel.translateY(-3);\n    frontRightwheel.translateZ(17.5);\n\n    \n    // Back wheel part\n    // part 5\n    const backWheelAttacher = createWheelAttacher(0x333333);\n    backWheelAttacher.translateX(-18);\n    backWheelAttacher.translateY(-3);\n\n    // part 6\n    const backLeftwheel = createWheel(0xFFC0CB);\n    backWheelAttacher.add(backLeftwheel);\n    backLeftwheel.translateY(-3);\n    backLeftwheel.translateZ(-17.5);\n\n    // part 7\n    const backRightwheel = createWheel(0xFFC0CB);\n    backWheelAttacher.add(backRightwheel);\n    backRightwheel.translateY(-3);\n    backRightwheel.translateZ(17.5);\n    \n\n    const allWheelAttachers = new THREE.Object3D();\n    allWheelAttachers.add(frontWheelAttacher, backWheelAttacher);\n    mainBox.add(allWheelAttachers);\n\n\n    // part 8\n    const carFrontTexture = getCarFrontBackTexture(mainBox);\n\n    // part 9\n    const carBackTexture = getCarFrontBackTexture(mainBox);\n\n    // part 10\n    const carLeftSideTexture = getCarSideTexture(mainBox);\n\n    // part 11\n    const carRightSideTexture = getCarSideTexture(mainBox);\n\n    // Putting all textures into cabin\n    const cabin = createCabin(carFrontTexture, carBackTexture, carLeftSideTexture, carRightSideTexture);\n    mainBox.add(cabin);\n    cabin.translateX(-6);\n    cabin.translateY(13.5);\n\n\n    // Eye part\n    // part 12\n    const leftHeadEye = headEye(0x000000);\n    leftHeadEye.translateX(30);\n    leftHeadEye.translateY(3);\n    leftHeadEye.translateZ(-10);\n    leftHeadEye.rotateY(degreeToRadian(90));\n\n    // part 13\n    const rightHeadEye = headEye(0x000000);\n    rightHeadEye.translateX(30);\n    rightHeadEye.translateY(3);\n    rightHeadEye.translateZ(10);\n    rightHeadEye.rotateY(degreeToRadian(90));\n    \n    const eyes = new THREE.Object3D();\n    eyes.add(leftHeadEye, rightHeadEye);\n    mainBox.add(eyes);\n\n    \n    // Nose\n    // part 14\n    const nose = createNose(0xf70707);\n    nose.translateX(30);\n    nose.rotateZ(degreeToRadian(-90));\n    mainBox.add(nose);\n\n\n    // Back exhaust part\n    // part 15\n    const leftExhaust = createExhaust(0x968b8b);\n    leftExhaust.translateX(-32);\n    leftExhaust.translateY(-5);\n    leftExhaust.translateZ(-3);\n    leftExhaust.rotateZ(degreeToRadian(90));\n\n    // part 16\n    const rightExhaust = createExhaust(0x968b8b);\n    rightExhaust.translateX(-32);\n    rightExhaust.translateY(-5);\n    rightExhaust.translateZ(3);\n    rightExhaust.rotateZ(degreeToRadian(90));\n\n    // Putting all exhaust into exhaust group\n    const exhausts = new THREE.Object3D();\n    exhausts.add(leftExhaust, rightExhaust);\n    mainBox.add(exhausts);\n\n    return mainBox\n}\n\nfunction createExhaust(color) {\n    const geometry = new THREE.CylinderGeometry( 1.3, 1.3, 4, 32 );\n    const material = new THREE.MeshBasicMaterial( {color: color} );\n    const cylinder = new THREE.Mesh( geometry, material );\n    return cylinder\n}\n\nfunction createNose(color) {\n    const geometry = new THREE.ConeGeometry( 5, 10, 32 );\n    const material = new THREE.MeshBasicMaterial( {color: color} );\n    const cone = new THREE.Mesh( geometry, material );\n    return cone;\n}\n\nfunction headEye(color) {\n    var geometry = new THREE.RingGeometry(1, 3.5, 32);\n    var material = new THREE.MeshPhongMaterial({color: 0x000000});\n    const blackEye = new THREE.Mesh(geometry, material);\n\n    geometry = new THREE.RingGeometry(0, 1, 32);\n    material = new THREE.MeshPhongMaterial({color: 0xffffff});\n    const whiteEye = new THREE.Mesh(geometry, material);\n\n    blackEye.add(whiteEye)\n\n    return blackEye;\n}\n\nfunction getCarSideTexture(mainBox) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 128;\n    canvas.height = 32;\n    const context = canvas.getContext(\"2d\");\n\n    if (context != null) {\n        context.fillStyle = \"#ffffff\";\n        context.fillRect(mainBox.position.x, mainBox.position.y, 128, 32);\n\n        context.fillStyle = \"#666666\";\n        context.fillRect(mainBox.position.x + 10, mainBox.position.y + 5, 38, 24);\n        context.fillRect(mainBox.position.x + 58, mainBox.position.y + 5, 60, 24);\n    }\n    return new THREE.CanvasTexture(canvas);\n}\n\nfunction getCarFrontBackTexture(mainBox) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 64;\n    canvas.height = 32;\n    const context = canvas.getContext(\"2d\");\n\n    if (context != null) {\n        context.fillStyle = \"#ffffff\";\n        context.fillRect(mainBox.position.x, mainBox.position.y, 64, 32);\n\n        context.fillStyle = \"#666666\";\n        context.fillRect(mainBox.position.x + 8, mainBox.position.y + 5, 48, 24);\n    }\n    return new THREE.CanvasTexture(canvas);\n}\n\nfunction createCabin(carFrontTexture, \n    carBackTexture, \n    carRightSideTexture, \n    carLeftSideTexture) {\n    const cabin = new THREE.Mesh(new THREE.BoxBufferGeometry(33, 12, 24), [\n        new THREE.MeshLambertMaterial({map: carFrontTexture}),\n        new THREE.MeshLambertMaterial({map: carBackTexture}),\n        new THREE.MeshLambertMaterial({ color: 0xffffff }), // top\n        new THREE.MeshLambertMaterial({ color: 0xffffff }), // bottom\n        new THREE.MeshLambertMaterial({ map: carRightSideTexture }),\n        new THREE.MeshLambertMaterial({ map: carLeftSideTexture }),\n    ]);\n    return cabin\n}\n\nfunction createMainBox(color) {\n    const main = new THREE.Mesh(\n        new THREE.BoxBufferGeometry(60, 15, 30),\n        new THREE.MeshPhongMaterial({ color: color, flatShading: true})\n    );\n    return main\n}\n\nfunction createWheel(color) {\n    // const geometry: THREE.CircleGeometry = new THREE.CircleGeometry(2, 32);\n    const geometry = new THREE.TorusGeometry( 5, 3, 20, 50 );\n    const material = new THREE.MeshPhongMaterial({ color: 0xFFC0CB});\n    const wheel = new THREE.Mesh(geometry, material);\n    return wheel;\n}\n\nfunction createWheelAttacher(color) {\n    const geometry = new THREE.BoxBufferGeometry(12, 12, 33);\n    const material = new THREE.MeshPhongMaterial({ color: color});\n    const wheelAttacher = new THREE.Mesh(geometry, material);\n    return wheelAttacher;\n}\n\nfunction degreeToRadian(degree) {\n    return degree * Math.PI / 180;\n}\n\nexport default SantaCar;"]},"metadata":{},"sourceType":"module"}