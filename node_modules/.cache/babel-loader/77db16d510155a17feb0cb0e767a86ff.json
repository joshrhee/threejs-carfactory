{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sangjunerhee/Downloads/Threejs-CarFactory/src/components/Spinner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from \"react-three-fiber\";\nimport _ from 'lodash';\n\nconst Spinner = () => {\n  _s();\n\n  const ref = useRef();\n  useFrame(state => {\n    const y = _.get(ref.current, 'rotation.y');\n\n    if (y) {\n      ref.current.rotation.y += .1;\n      ref.current.rotation.x += .1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    position: [0, 3, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"dodecahedronBufferGeometry\", {\n      args: [1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshPhysicalMaterial\", {\n      color: 'rgb(30, 75, 93)',\n      opacity: .5,\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Spinner, \"8QVLrcMdYxPUkj6ry5zpyt6J6X8=\", false, function () {\n  return [useFrame];\n});\n\n_c = Spinner;\nexport default Spinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["/Users/sangjunerhee/Downloads/Threejs-CarFactory/src/components/Spinner.jsx"],"names":["React","useRef","THREE","useFrame","_","Spinner","ref","state","y","get","current","rotation","x","DoubleSide"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACAE,EAAAA,QAAQ,CAACI,KAAK,IAAI;AACd,UAAMC,CAAC,GAAGJ,CAAC,CAACK,GAAF,CAAMH,GAAG,CAACI,OAAV,EAAmB,YAAnB,CAAV;;AACA,QAAIF,CAAJ,EAAO;AACHF,MAAAA,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBH,CAArB,IAA0B,EAA1B;AACAF,MAAAA,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,EAA1B;AACH;AACJ,GANO,CAAR;AAQA,sBACI;AAAM,IAAA,GAAG,EAAEN,GAAX;AAAgB,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA1B;AAAA,4BACI;AAA4B,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAsB,MAAA,KAAK,EAAE,iBAA7B;AAAgD,MAAA,OAAO,EAAE,EAAzD;AAA6D,MAAA,IAAI,EAAEJ,KAAK,CAACW;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;GAAMR,O;UAEFF,Q;;;KAFEE,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, {useRef} from 'react';\nimport * as THREE from 'three';\nimport {useFrame} from \"react-three-fiber\";\nimport _ from 'lodash';\n\nconst Spinner = () => {\n    const ref = useRef();\n    useFrame(state => {\n        const y = _.get(ref.current, 'rotation.y');\n        if (y) {\n            ref.current.rotation.y += .1;\n            ref.current.rotation.x += .1;\n        }\n    });\n\n    return (\n        <mesh ref={ref} position={[0, 3, 0]}>\n            <dodecahedronBufferGeometry args={[1, 1]} />\n            <meshPhysicalMaterial color={'rgb(30, 75, 93)'} opacity={.5} side={THREE.DoubleSide}/>\n        </mesh>\n    )\n};\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}