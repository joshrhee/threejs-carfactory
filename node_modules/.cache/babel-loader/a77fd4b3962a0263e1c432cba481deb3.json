{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sangjunerhee/Desktop/Git/Threejs-CarFactory/src/components/Model.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLoader, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'; // small change\n\nconst Model = props => {\n  _s();\n\n  const model = useLoader(GLTFLoader, process.env.PUBLIC_URL + props.path);\n  console.log(\"model\", model);\n  let mixer;\n\n  if (model.animations.length > 0) {\n    mixer = new THREE.AnimationMixer(model.scene);\n    model.animations.forEach(clip => {\n      const action = mixer.clipAction(clip);\n      action.play();\n    });\n  }\n\n  useFrame((scene, delta) => {\n    var _mixer;\n\n    (_mixer = mixer) === null || _mixer === void 0 ? void 0 : _mixer.update(delta);\n  });\n  model.scene.traverse(child => {\n    if (child.isMesh) {\n      child.castShadow = true;\n      child.receiveShadow = true;\n      child.material.side = THREE.FrontSide;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: model.scene,\n    scale: props.scale,\n    position: props.position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Model, \"PsLhkUpEZtwq1R28vnbCNufp9QU=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = Model;\nexport default Model;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["/Users/sangjunerhee/Desktop/Git/Threejs-CarFactory/src/components/Model.jsx"],"names":["useLoader","useFrame","GLTFLoader","THREE","Model","props","model","process","env","PUBLIC_URL","path","console","log","mixer","animations","length","AnimationMixer","scene","forEach","clip","action","clipAction","play","delta","update","traverse","child","isMesh","castShadow","receiveShadow","material","side","FrontSide","scale","position"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SACIC,UADJ,QAEO,uCAFP;AAGA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAMC,KAAK,GAAGN,SAAS,CACnBE,UADmB,EAEnBK,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,KAAK,CAACK,IAFZ,CAAvB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AAEA,MAAIO,KAAJ;;AACA,MAAIP,KAAK,CAACQ,UAAN,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BF,IAAAA,KAAK,GAAG,IAAIV,KAAK,CAACa,cAAV,CAAyBV,KAAK,CAACW,KAA/B,CAAR;AACAX,IAAAA,KAAK,CAACQ,UAAN,CAAiBI,OAAjB,CAAyBC,IAAI,IAAI;AAC7B,YAAMC,MAAM,GAAGP,KAAK,CAACQ,UAAN,CAAiBF,IAAjB,CAAf;AACAC,MAAAA,MAAM,CAACE,IAAP;AACH,KAHD;AAIH;;AAIDrB,EAAAA,QAAQ,CAAC,CAACgB,KAAD,EAAOM,KAAP,KAAiB;AAAA;;AACtB,cAAAV,KAAK,UAAL,wCAAOW,MAAP,CAAcD,KAAd;AACH,GAFO,CAAR;AAIAjB,EAAAA,KAAK,CAACW,KAAN,CAAYQ,QAAZ,CAAqBC,KAAK,IAAI;AAC1B,QAAIA,KAAK,CAACC,MAAV,EAAkB;AACdD,MAAAA,KAAK,CAACE,UAAN,GAAmB,IAAnB;AACAF,MAAAA,KAAK,CAACG,aAAN,GAAsB,IAAtB;AACAH,MAAAA,KAAK,CAACI,QAAN,CAAeC,IAAf,GAAsB5B,KAAK,CAAC6B,SAA5B;AACH;AACJ,GAND;AAQA,sBACI;AACI,IAAA,MAAM,EAAE1B,KAAK,CAACW,KADlB;AAEI,IAAA,KAAK,EAAEZ,KAAK,CAAC4B,KAFjB;AAGI,IAAA,QAAQ,EAAE5B,KAAK,CAAC6B;AAHpB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;GAAM9B,K;UACYJ,S,EAkBdC,Q;;;KAnBEG,K;AAwCN,eAAeA,KAAf","sourcesContent":["import { useLoader, useFrame } from 'react-three-fiber';\nimport {\n    GLTFLoader\n} from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\n// small change\nconst Model = props => {\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + props.path\n    )\n\n    console.log(\"model\", model)\n\n    let mixer\n    if (model.animations.length > 0) {\n        mixer = new THREE.AnimationMixer(model.scene)\n        model.animations.forEach(clip => {\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    \n\n    useFrame((scene,delta) => {\n        mixer?.update(delta)\n    })\n\n    model.scene.traverse(child => {\n        if (child.isMesh) {\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n\n    return (\n        <primitive\n            object={model.scene}\n            scale={props.scale}\n            position={props.position}\n        />\n    )\n}\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}