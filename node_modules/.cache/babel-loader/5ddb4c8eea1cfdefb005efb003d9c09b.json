{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sangjunerhee/Desktop/Git/threejs-carfactory/src/components/Bulb.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useThree } from 'react-three-fiber';\n\nconst Bulb = props => {\n  _s();\n\n  const ref = useRef();\n  const {\n    scene\n  } = useThree();\n  useEffect(() => {\n    if (scene.lights) scene.lights.push(ref);else scene.lights = [ref];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      castShadow: true,\n      \"shadow-mapSize-height\": 2 ** 10,\n      \"shadow-mapSize-width\": 2 ** 10,\n      \"shadow-radius\": 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"sphereBufferGeometry\", {\n      args: [0.2, 20, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n      emissive: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bulb, \"jdraeDIKP3EKYRYgUGKa0BuZGLU=\", false, function () {\n  return [useThree];\n});\n\n_c = Bulb;\nexport default Bulb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bulb\");","map":{"version":3,"sources":["/Users/sangjunerhee/Desktop/Git/threejs-carfactory/src/components/Bulb.jsx"],"names":["useEffect","useRef","useThree","Bulb","props","ref","scene","lights","push"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAClB,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYJ,QAAQ,EAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACC,MAAV,EAAkBD,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBH,GAAlB,EAAlB,KACKC,KAAK,CAACC,MAAN,GAAe,CAACF,GAAD,CAAf;AACR,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI,qBAAUD,KAAV;AAAiB,IAAA,GAAG,EAAEC,GAAtB;AAAA,4BACI;AACI,MAAA,UAAU,MADd;AAEI,+BAAuB,KAAG,EAF9B;AAGI,8BAAsB,KAAG,EAH7B;AAII,uBAAe;AAJnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAsB,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAmB,MAAA,QAAQ,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnBD;;GAAMF,I;UAEgBD,Q;;;KAFhBC,I;AAqBN,eAAeA,IAAf","sourcesContent":["import { useEffect, useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Bulb = props => {\n    const ref = useRef()\n    const { scene } = useThree()\n    useEffect(() => {\n        if (scene.lights) scene.lights.push(ref)\n        else scene.lights = [ref]\n    }, [])\n    return (\n        <mesh {...props} ref={ref}>\n            <pointLight\n                castShadow\n                shadow-mapSize-height={2**10}\n                shadow-mapSize-width={2**10}\n                shadow-radius={10}\n            />\n            <sphereBufferGeometry args={[0.2, 20, 20]} />\n            <meshPhongMaterial emissive='white' />\n        </mesh>\n    )\n}\n\nexport default Bulb;\n"]},"metadata":{},"sourceType":"module"}